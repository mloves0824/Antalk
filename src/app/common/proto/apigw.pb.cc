// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apigw.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "apigw.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace antalk {
namespace apigw {

namespace {

const ::google::protobuf::Descriptor* LoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* LogoutReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogoutReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LogoutResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogoutResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegisterNoityReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegisterNoityReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Notify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Notify_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerKickoutNotifyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerKickoutNotifyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerKickoutNotifyResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerKickoutNotifyResp_reflection_ = NULL;
const ::google::protobuf::ServiceDescriptor* LoginService_descriptor_ = NULL;
const ::google::protobuf::ServiceDescriptor* MsgService_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_apigw_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_apigw_2eproto() {
  protobuf_AddDesc_apigw_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "apigw.proto");
  GOOGLE_CHECK(file != NULL);
  LoginReq_descriptor_ = file->message_type(0);
  static const int LoginReq_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, online_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, client_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, client_version_),
  };
  LoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginReq_descriptor_,
      LoginReq::default_instance_,
      LoginReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(LoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _internal_metadata_),
      -1);
  LoginResp_descriptor_ = file->message_type(1);
  static const int LoginResp_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, server_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, result_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, result_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, online_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, user_info_),
  };
  LoginResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginResp_descriptor_,
      LoginResp::default_instance_,
      LoginResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(LoginResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, _internal_metadata_),
      -1);
  LogoutReq_descriptor_ = file->message_type(2);
  static const int LogoutReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq, time_stamp_),
  };
  LogoutReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LogoutReq_descriptor_,
      LogoutReq::default_instance_,
      LogoutReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(LogoutReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq, _internal_metadata_),
      -1);
  LogoutResp_descriptor_ = file->message_type(3);
  static const int LogoutResp_offsets_[1] = {
  };
  LogoutResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LogoutResp_descriptor_,
      LogoutResp::default_instance_,
      LogoutResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(LogoutResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutResp, _internal_metadata_),
      -1);
  RegisterNoityReq_descriptor_ = file->message_type(4);
  static const int RegisterNoityReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterNoityReq, uid_),
  };
  RegisterNoityReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegisterNoityReq_descriptor_,
      RegisterNoityReq::default_instance_,
      RegisterNoityReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterNoityReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(RegisterNoityReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterNoityReq, _internal_metadata_),
      -1);
  Notify_descriptor_ = file->message_type(5);
  static const int Notify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notify, body_),
  };
  Notify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Notify_descriptor_,
      Notify::default_instance_,
      Notify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notify, _has_bits_[0]),
      -1,
      -1,
      sizeof(Notify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notify, _internal_metadata_),
      -1);
  ServerKickoutNotifyReq_descriptor_ = file->message_type(6);
  static const int ServerKickoutNotifyReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerKickoutNotifyReq, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerKickoutNotifyReq, reason_),
  };
  ServerKickoutNotifyReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerKickoutNotifyReq_descriptor_,
      ServerKickoutNotifyReq::default_instance_,
      ServerKickoutNotifyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerKickoutNotifyReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(ServerKickoutNotifyReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerKickoutNotifyReq, _internal_metadata_),
      -1);
  ServerKickoutNotifyResp_descriptor_ = file->message_type(7);
  static const int ServerKickoutNotifyResp_offsets_[1] = {
  };
  ServerKickoutNotifyResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerKickoutNotifyResp_descriptor_,
      ServerKickoutNotifyResp::default_instance_,
      ServerKickoutNotifyResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerKickoutNotifyResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(ServerKickoutNotifyResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerKickoutNotifyResp, _internal_metadata_),
      -1);
  LoginService_descriptor_ = file->service(0);
  MsgService_descriptor_ = file->service(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_apigw_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginReq_descriptor_, &LoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginResp_descriptor_, &LoginResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LogoutReq_descriptor_, &LogoutReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LogoutResp_descriptor_, &LogoutResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegisterNoityReq_descriptor_, &RegisterNoityReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Notify_descriptor_, &Notify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerKickoutNotifyReq_descriptor_, &ServerKickoutNotifyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerKickoutNotifyResp_descriptor_, &ServerKickoutNotifyResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_apigw_2eproto() {
  delete LoginReq::default_instance_;
  delete LoginReq_reflection_;
  delete LoginResp::default_instance_;
  delete LoginResp_reflection_;
  delete LogoutReq::default_instance_;
  delete LogoutReq_reflection_;
  delete LogoutResp::default_instance_;
  delete LogoutResp_reflection_;
  delete RegisterNoityReq::default_instance_;
  delete RegisterNoityReq_reflection_;
  delete Notify::default_instance_;
  delete Notify_reflection_;
  delete ServerKickoutNotifyReq::default_instance_;
  delete ServerKickoutNotifyReq_reflection_;
  delete ServerKickoutNotifyResp::default_instance_;
  delete ServerKickoutNotifyResp_reflection_;
}

void protobuf_AddDesc_apigw_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_apigw_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::antalk::common::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013apigw.proto\022\014antalk.apigw\032\014common.prot"
    "o\"\267\001\n\010LoginReq\022\013\n\003uid\030\001 \001(\t\022\020\n\010username\030"
    "\002 \001(\t\022\020\n\010password\030\003 \001(\t\0222\n\ronline_status"
    "\030\004 \001(\0162\033.antalk.common.UserStatType\022.\n\013c"
    "lient_type\030\005 \001(\0162\031.antalk.common.ClientT"
    "ype\022\026\n\016client_version\030\006 \001(\t\"\324\001\n\tLoginRes"
    "p\022\013\n\003uid\030\001 \001(\t\022\023\n\013server_time\030\002 \001(\r\022.\n\013r"
    "esult_code\030\003 \001(\0162\031.antalk.common.ResultT"
    "ype\022\025\n\rresult_string\030\004 \001(\t\0222\n\ronline_sta"
    "tus\030\005 \001(\0162\033.antalk.common.UserStatType\022*"
    "\n\tuser_info\030\006 \001(\0132\027.antalk.common.UserIn"
    "fo\",\n\tLogoutReq\022\013\n\003uid\030\001 \001(\t\022\022\n\ntime_sta"
    "mp\030\002 \001(\003\"\014\n\nLogoutResp\"\037\n\020RegisterNoityR"
    "eq\022\013\n\003uid\030\001 \001(\t\"\026\n\006Notify\022\014\n\004body\030\001 \001(\t\""
    "S\n\026ServerKickoutNotifyReq\022\013\n\003uid\030\001 \001(\t\022,"
    "\n\006reason\030\002 \001(\0162\034.antalk.common.KickoutRe"
    "ason\"\031\n\027ServerKickoutNotifyResp2\260\002\n\014Logi"
    "nService\0228\n\005Login\022\026.antalk.apigw.LoginRe"
    "q\032\027.antalk.apigw.LoginResp\022;\n\006Logout\022\027.a"
    "ntalk.apigw.LogoutReq\032\030.antalk.apigw.Log"
    "outResp\022E\n\rRegisterNoity\022\036.antalk.apigw."
    "RegisterNoityReq\032\024.antalk.apigw.Notify\022b"
    "\n\023ServerKickoutNotify\022$.antalk.apigw.Ser"
    "verKickoutNotifyReq\032%.antalk.apigw.Serve"
    "rKickoutNotifyResp2\014\n\nMsgServiceB\022\n\rcom."
    "antalk.pb\200\001\001", 1012);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "apigw.proto", &protobuf_RegisterTypes);
  LoginReq::default_instance_ = new LoginReq();
  LoginResp::default_instance_ = new LoginResp();
  LogoutReq::default_instance_ = new LogoutReq();
  LogoutResp::default_instance_ = new LogoutResp();
  RegisterNoityReq::default_instance_ = new RegisterNoityReq();
  Notify::default_instance_ = new Notify();
  ServerKickoutNotifyReq::default_instance_ = new ServerKickoutNotifyReq();
  ServerKickoutNotifyResp::default_instance_ = new ServerKickoutNotifyResp();
  LoginReq::default_instance_->InitAsDefaultInstance();
  LoginResp::default_instance_->InitAsDefaultInstance();
  LogoutReq::default_instance_->InitAsDefaultInstance();
  LogoutResp::default_instance_->InitAsDefaultInstance();
  RegisterNoityReq::default_instance_->InitAsDefaultInstance();
  Notify::default_instance_->InitAsDefaultInstance();
  ServerKickoutNotifyReq::default_instance_->InitAsDefaultInstance();
  ServerKickoutNotifyResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_apigw_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_apigw_2eproto {
  StaticDescriptorInitializer_apigw_2eproto() {
    protobuf_AddDesc_apigw_2eproto();
  }
} static_descriptor_initializer_apigw_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq::kUidFieldNumber;
const int LoginReq::kUsernameFieldNumber;
const int LoginReq::kPasswordFieldNumber;
const int LoginReq::kOnlineStatusFieldNumber;
const int LoginReq::kClientTypeFieldNumber;
const int LoginReq::kClientVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq::LoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:antalk.apigw.LoginReq)
}

void LoginReq::InitAsDefaultInstance() {
}

LoginReq::LoginReq(const LoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:antalk.apigw.LoginReq)
}

void LoginReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_status_ = 1;
  client_type_ = 1;
  client_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginReq::~LoginReq() {
  // @@protoc_insertion_point(destructor:antalk.apigw.LoginReq)
  SharedDtor();
}

void LoginReq::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginReq_descriptor_;
}

const LoginReq& LoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_apigw_2eproto();
  return *default_instance_;
}

LoginReq* LoginReq::default_instance_ = NULL;

LoginReq* LoginReq::New(::google::protobuf::Arena* arena) const {
  LoginReq* n = new LoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:antalk.apigw.LoginReq)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_uid()) {
      uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    online_status_ = 1;
    client_type_ = 1;
    if (has_client_version()) {
      client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:antalk.apigw.LoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "antalk.apigw.LoginReq.uid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_username;
        break;
      }

      // optional string username = 2;
      case 2: {
        if (tag == 18) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "antalk.apigw.LoginReq.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_password;
        break;
      }

      // optional string password = 3;
      case 3: {
        if (tag == 26) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "antalk.apigw.LoginReq.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_online_status;
        break;
      }

      // optional .antalk.common.UserStatType online_status = 4;
      case 4: {
        if (tag == 32) {
         parse_online_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::antalk::common::UserStatType_IsValid(value)) {
            set_online_status(static_cast< ::antalk::common::UserStatType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_client_type;
        break;
      }

      // optional .antalk.common.ClientType client_type = 5;
      case 5: {
        if (tag == 40) {
         parse_client_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::antalk::common::ClientType_IsValid(value)) {
            set_client_type(static_cast< ::antalk::common::ClientType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_client_version;
        break;
      }

      // optional string client_version = 6;
      case 6: {
        if (tag == 50) {
         parse_client_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->client_version().data(), this->client_version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "antalk.apigw.LoginReq.client_version");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:antalk.apigw.LoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:antalk.apigw.LoginReq)
  return false;
#undef DO_
}

void LoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:antalk.apigw.LoginReq)
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.LoginReq.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // optional string username = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.LoginReq.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional string password = 3;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.LoginReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // optional .antalk.common.UserStatType online_status = 4;
  if (has_online_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->online_status(), output);
  }

  // optional .antalk.common.ClientType client_type = 5;
  if (has_client_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->client_type(), output);
  }

  // optional string client_version = 6;
  if (has_client_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->client_version().data(), this->client_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.LoginReq.client_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->client_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:antalk.apigw.LoginReq)
}

::google::protobuf::uint8* LoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:antalk.apigw.LoginReq)
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.LoginReq.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // optional string username = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.LoginReq.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional string password = 3;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.LoginReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // optional .antalk.common.UserStatType online_status = 4;
  if (has_online_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->online_status(), target);
  }

  // optional .antalk.common.ClientType client_type = 5;
  if (has_client_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->client_type(), target);
  }

  // optional string client_version = 6;
  if (has_client_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->client_version().data(), this->client_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.LoginReq.client_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->client_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:antalk.apigw.LoginReq)
  return target;
}

int LoginReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:antalk.apigw.LoginReq)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional string uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid());
    }

    // optional string username = 2;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string password = 3;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional .antalk.common.UserStatType online_status = 4;
    if (has_online_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->online_status());
    }

    // optional .antalk.common.ClientType client_type = 5;
    if (has_client_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->client_type());
    }

    // optional string client_version = 6;
    if (has_client_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->client_version());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:antalk.apigw.LoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LoginReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:antalk.apigw.LoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:antalk.apigw.LoginReq)
    MergeFrom(*source);
  }
}

void LoginReq::MergeFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:antalk.apigw.LoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_has_uid();
      uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
    }
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (from.has_online_status()) {
      set_online_status(from.online_status());
    }
    if (from.has_client_type()) {
      set_client_type(from.client_type());
    }
    if (from.has_client_version()) {
      set_has_client_version();
      client_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:antalk.apigw.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq::CopyFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:antalk.apigw.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq::IsInitialized() const {

  return true;
}

void LoginReq::Swap(LoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq::InternalSwap(LoginReq* other) {
  uid_.Swap(&other->uid_);
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  std::swap(online_status_, other->online_status_);
  std::swap(client_type_, other->client_type_);
  client_version_.Swap(&other->client_version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginReq_descriptor_;
  metadata.reflection = LoginReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReq

// optional string uid = 1;
bool LoginReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoginReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void LoginReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoginReq::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uid();
}
 const ::std::string& LoginReq::uid() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.LoginReq.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginReq::set_uid(const ::std::string& value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:antalk.apigw.LoginReq.uid)
}
 void LoginReq::set_uid(const char* value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:antalk.apigw.LoginReq.uid)
}
 void LoginReq::set_uid(const char* value, size_t size) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:antalk.apigw.LoginReq.uid)
}
 ::std::string* LoginReq::mutable_uid() {
  set_has_uid();
  // @@protoc_insertion_point(field_mutable:antalk.apigw.LoginReq.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginReq::release_uid() {
  // @@protoc_insertion_point(field_release:antalk.apigw.LoginReq.uid)
  clear_has_uid();
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginReq::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    set_has_uid();
  } else {
    clear_has_uid();
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:antalk.apigw.LoginReq.uid)
}

// optional string username = 2;
bool LoginReq::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LoginReq::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
void LoginReq::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
void LoginReq::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
 const ::std::string& LoginReq::username() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.LoginReq.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginReq::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:antalk.apigw.LoginReq.username)
}
 void LoginReq::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:antalk.apigw.LoginReq.username)
}
 void LoginReq::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:antalk.apigw.LoginReq.username)
}
 ::std::string* LoginReq::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:antalk.apigw.LoginReq.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginReq::release_username() {
  // @@protoc_insertion_point(field_release:antalk.apigw.LoginReq.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginReq::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:antalk.apigw.LoginReq.username)
}

// optional string password = 3;
bool LoginReq::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LoginReq::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
void LoginReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
void LoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
 const ::std::string& LoginReq::password() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.LoginReq.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginReq::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:antalk.apigw.LoginReq.password)
}
 void LoginReq::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:antalk.apigw.LoginReq.password)
}
 void LoginReq::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:antalk.apigw.LoginReq.password)
}
 ::std::string* LoginReq::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:antalk.apigw.LoginReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginReq::release_password() {
  // @@protoc_insertion_point(field_release:antalk.apigw.LoginReq.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:antalk.apigw.LoginReq.password)
}

// optional .antalk.common.UserStatType online_status = 4;
bool LoginReq::has_online_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LoginReq::set_has_online_status() {
  _has_bits_[0] |= 0x00000008u;
}
void LoginReq::clear_has_online_status() {
  _has_bits_[0] &= ~0x00000008u;
}
void LoginReq::clear_online_status() {
  online_status_ = 1;
  clear_has_online_status();
}
 ::antalk::common::UserStatType LoginReq::online_status() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.LoginReq.online_status)
  return static_cast< ::antalk::common::UserStatType >(online_status_);
}
 void LoginReq::set_online_status(::antalk::common::UserStatType value) {
  assert(::antalk::common::UserStatType_IsValid(value));
  set_has_online_status();
  online_status_ = value;
  // @@protoc_insertion_point(field_set:antalk.apigw.LoginReq.online_status)
}

// optional .antalk.common.ClientType client_type = 5;
bool LoginReq::has_client_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LoginReq::set_has_client_type() {
  _has_bits_[0] |= 0x00000010u;
}
void LoginReq::clear_has_client_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void LoginReq::clear_client_type() {
  client_type_ = 1;
  clear_has_client_type();
}
 ::antalk::common::ClientType LoginReq::client_type() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.LoginReq.client_type)
  return static_cast< ::antalk::common::ClientType >(client_type_);
}
 void LoginReq::set_client_type(::antalk::common::ClientType value) {
  assert(::antalk::common::ClientType_IsValid(value));
  set_has_client_type();
  client_type_ = value;
  // @@protoc_insertion_point(field_set:antalk.apigw.LoginReq.client_type)
}

// optional string client_version = 6;
bool LoginReq::has_client_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LoginReq::set_has_client_version() {
  _has_bits_[0] |= 0x00000020u;
}
void LoginReq::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000020u;
}
void LoginReq::clear_client_version() {
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_version();
}
 const ::std::string& LoginReq::client_version() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.LoginReq.client_version)
  return client_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginReq::set_client_version(const ::std::string& value) {
  set_has_client_version();
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:antalk.apigw.LoginReq.client_version)
}
 void LoginReq::set_client_version(const char* value) {
  set_has_client_version();
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:antalk.apigw.LoginReq.client_version)
}
 void LoginReq::set_client_version(const char* value, size_t size) {
  set_has_client_version();
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:antalk.apigw.LoginReq.client_version)
}
 ::std::string* LoginReq::mutable_client_version() {
  set_has_client_version();
  // @@protoc_insertion_point(field_mutable:antalk.apigw.LoginReq.client_version)
  return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginReq::release_client_version() {
  // @@protoc_insertion_point(field_release:antalk.apigw.LoginReq.client_version)
  clear_has_client_version();
  return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginReq::set_allocated_client_version(::std::string* client_version) {
  if (client_version != NULL) {
    set_has_client_version();
  } else {
    clear_has_client_version();
  }
  client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
  // @@protoc_insertion_point(field_set_allocated:antalk.apigw.LoginReq.client_version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginResp::kUidFieldNumber;
const int LoginResp::kServerTimeFieldNumber;
const int LoginResp::kResultCodeFieldNumber;
const int LoginResp::kResultStringFieldNumber;
const int LoginResp::kOnlineStatusFieldNumber;
const int LoginResp::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginResp::LoginResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:antalk.apigw.LoginResp)
}

void LoginResp::InitAsDefaultInstance() {
  user_info_ = const_cast< ::antalk::common::UserInfo*>(&::antalk::common::UserInfo::default_instance());
}

LoginResp::LoginResp(const LoginResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:antalk.apigw.LoginResp)
}

void LoginResp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_time_ = 0u;
  result_code_ = 0;
  result_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_status_ = 1;
  user_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginResp::~LoginResp() {
  // @@protoc_insertion_point(destructor:antalk.apigw.LoginResp)
  SharedDtor();
}

void LoginResp::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete user_info_;
  }
}

void LoginResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginResp_descriptor_;
}

const LoginResp& LoginResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_apigw_2eproto();
  return *default_instance_;
}

LoginResp* LoginResp::default_instance_ = NULL;

LoginResp* LoginResp::New(::google::protobuf::Arena* arena) const {
  LoginResp* n = new LoginResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginResp::Clear() {
// @@protoc_insertion_point(message_clear_start:antalk.apigw.LoginResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LoginResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LoginResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(server_time_, result_code_);
    if (has_uid()) {
      uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_result_string()) {
      result_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    online_status_ = 1;
    if (has_user_info()) {
      if (user_info_ != NULL) user_info_->::antalk::common::UserInfo::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoginResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:antalk.apigw.LoginResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "antalk.apigw.LoginResp.uid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_server_time;
        break;
      }

      // optional uint32 server_time = 2;
      case 2: {
        if (tag == 16) {
         parse_server_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_time_)));
          set_has_server_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_result_code;
        break;
      }

      // optional .antalk.common.ResultType result_code = 3;
      case 3: {
        if (tag == 24) {
         parse_result_code:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::antalk::common::ResultType_IsValid(value)) {
            set_result_code(static_cast< ::antalk::common::ResultType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_result_string;
        break;
      }

      // optional string result_string = 4;
      case 4: {
        if (tag == 34) {
         parse_result_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result_string().data(), this->result_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "antalk.apigw.LoginResp.result_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_online_status;
        break;
      }

      // optional .antalk.common.UserStatType online_status = 5;
      case 5: {
        if (tag == 40) {
         parse_online_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::antalk::common::UserStatType_IsValid(value)) {
            set_online_status(static_cast< ::antalk::common::UserStatType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_user_info;
        break;
      }

      // optional .antalk.common.UserInfo user_info = 6;
      case 6: {
        if (tag == 50) {
         parse_user_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:antalk.apigw.LoginResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:antalk.apigw.LoginResp)
  return false;
#undef DO_
}

void LoginResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:antalk.apigw.LoginResp)
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.LoginResp.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // optional uint32 server_time = 2;
  if (has_server_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_time(), output);
  }

  // optional .antalk.common.ResultType result_code = 3;
  if (has_result_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result_code(), output);
  }

  // optional string result_string = 4;
  if (has_result_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result_string().data(), this->result_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.LoginResp.result_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->result_string(), output);
  }

  // optional .antalk.common.UserStatType online_status = 5;
  if (has_online_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->online_status(), output);
  }

  // optional .antalk.common.UserInfo user_info = 6;
  if (has_user_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->user_info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:antalk.apigw.LoginResp)
}

::google::protobuf::uint8* LoginResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:antalk.apigw.LoginResp)
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.LoginResp.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // optional uint32 server_time = 2;
  if (has_server_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_time(), target);
  }

  // optional .antalk.common.ResultType result_code = 3;
  if (has_result_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result_code(), target);
  }

  // optional string result_string = 4;
  if (has_result_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result_string().data(), this->result_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.LoginResp.result_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->result_string(), target);
  }

  // optional .antalk.common.UserStatType online_status = 5;
  if (has_online_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->online_status(), target);
  }

  // optional .antalk.common.UserInfo user_info = 6;
  if (has_user_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->user_info_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:antalk.apigw.LoginResp)
  return target;
}

int LoginResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:antalk.apigw.LoginResp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional string uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid());
    }

    // optional uint32 server_time = 2;
    if (has_server_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_time());
    }

    // optional .antalk.common.ResultType result_code = 3;
    if (has_result_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result_code());
    }

    // optional string result_string = 4;
    if (has_result_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->result_string());
    }

    // optional .antalk.common.UserStatType online_status = 5;
    if (has_online_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->online_status());
    }

    // optional .antalk.common.UserInfo user_info = 6;
    if (has_user_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->user_info_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:antalk.apigw.LoginResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LoginResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:antalk.apigw.LoginResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:antalk.apigw.LoginResp)
    MergeFrom(*source);
  }
}

void LoginResp::MergeFrom(const LoginResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:antalk.apigw.LoginResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_has_uid();
      uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
    }
    if (from.has_server_time()) {
      set_server_time(from.server_time());
    }
    if (from.has_result_code()) {
      set_result_code(from.result_code());
    }
    if (from.has_result_string()) {
      set_has_result_string();
      result_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_string_);
    }
    if (from.has_online_status()) {
      set_online_status(from.online_status());
    }
    if (from.has_user_info()) {
      mutable_user_info()->::antalk::common::UserInfo::MergeFrom(from.user_info());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LoginResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:antalk.apigw.LoginResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResp::CopyFrom(const LoginResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:antalk.apigw.LoginResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResp::IsInitialized() const {

  if (has_user_info()) {
    if (!this->user_info_->IsInitialized()) return false;
  }
  return true;
}

void LoginResp::Swap(LoginResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginResp::InternalSwap(LoginResp* other) {
  uid_.Swap(&other->uid_);
  std::swap(server_time_, other->server_time_);
  std::swap(result_code_, other->result_code_);
  result_string_.Swap(&other->result_string_);
  std::swap(online_status_, other->online_status_);
  std::swap(user_info_, other->user_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginResp_descriptor_;
  metadata.reflection = LoginResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginResp

// optional string uid = 1;
bool LoginResp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoginResp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void LoginResp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoginResp::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uid();
}
 const ::std::string& LoginResp::uid() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.LoginResp.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginResp::set_uid(const ::std::string& value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:antalk.apigw.LoginResp.uid)
}
 void LoginResp::set_uid(const char* value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:antalk.apigw.LoginResp.uid)
}
 void LoginResp::set_uid(const char* value, size_t size) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:antalk.apigw.LoginResp.uid)
}
 ::std::string* LoginResp::mutable_uid() {
  set_has_uid();
  // @@protoc_insertion_point(field_mutable:antalk.apigw.LoginResp.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginResp::release_uid() {
  // @@protoc_insertion_point(field_release:antalk.apigw.LoginResp.uid)
  clear_has_uid();
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginResp::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    set_has_uid();
  } else {
    clear_has_uid();
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:antalk.apigw.LoginResp.uid)
}

// optional uint32 server_time = 2;
bool LoginResp::has_server_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LoginResp::set_has_server_time() {
  _has_bits_[0] |= 0x00000002u;
}
void LoginResp::clear_has_server_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void LoginResp::clear_server_time() {
  server_time_ = 0u;
  clear_has_server_time();
}
 ::google::protobuf::uint32 LoginResp::server_time() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.LoginResp.server_time)
  return server_time_;
}
 void LoginResp::set_server_time(::google::protobuf::uint32 value) {
  set_has_server_time();
  server_time_ = value;
  // @@protoc_insertion_point(field_set:antalk.apigw.LoginResp.server_time)
}

// optional .antalk.common.ResultType result_code = 3;
bool LoginResp::has_result_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LoginResp::set_has_result_code() {
  _has_bits_[0] |= 0x00000004u;
}
void LoginResp::clear_has_result_code() {
  _has_bits_[0] &= ~0x00000004u;
}
void LoginResp::clear_result_code() {
  result_code_ = 0;
  clear_has_result_code();
}
 ::antalk::common::ResultType LoginResp::result_code() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.LoginResp.result_code)
  return static_cast< ::antalk::common::ResultType >(result_code_);
}
 void LoginResp::set_result_code(::antalk::common::ResultType value) {
  assert(::antalk::common::ResultType_IsValid(value));
  set_has_result_code();
  result_code_ = value;
  // @@protoc_insertion_point(field_set:antalk.apigw.LoginResp.result_code)
}

// optional string result_string = 4;
bool LoginResp::has_result_string() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LoginResp::set_has_result_string() {
  _has_bits_[0] |= 0x00000008u;
}
void LoginResp::clear_has_result_string() {
  _has_bits_[0] &= ~0x00000008u;
}
void LoginResp::clear_result_string() {
  result_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_result_string();
}
 const ::std::string& LoginResp::result_string() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.LoginResp.result_string)
  return result_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginResp::set_result_string(const ::std::string& value) {
  set_has_result_string();
  result_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:antalk.apigw.LoginResp.result_string)
}
 void LoginResp::set_result_string(const char* value) {
  set_has_result_string();
  result_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:antalk.apigw.LoginResp.result_string)
}
 void LoginResp::set_result_string(const char* value, size_t size) {
  set_has_result_string();
  result_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:antalk.apigw.LoginResp.result_string)
}
 ::std::string* LoginResp::mutable_result_string() {
  set_has_result_string();
  // @@protoc_insertion_point(field_mutable:antalk.apigw.LoginResp.result_string)
  return result_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginResp::release_result_string() {
  // @@protoc_insertion_point(field_release:antalk.apigw.LoginResp.result_string)
  clear_has_result_string();
  return result_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginResp::set_allocated_result_string(::std::string* result_string) {
  if (result_string != NULL) {
    set_has_result_string();
  } else {
    clear_has_result_string();
  }
  result_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result_string);
  // @@protoc_insertion_point(field_set_allocated:antalk.apigw.LoginResp.result_string)
}

// optional .antalk.common.UserStatType online_status = 5;
bool LoginResp::has_online_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LoginResp::set_has_online_status() {
  _has_bits_[0] |= 0x00000010u;
}
void LoginResp::clear_has_online_status() {
  _has_bits_[0] &= ~0x00000010u;
}
void LoginResp::clear_online_status() {
  online_status_ = 1;
  clear_has_online_status();
}
 ::antalk::common::UserStatType LoginResp::online_status() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.LoginResp.online_status)
  return static_cast< ::antalk::common::UserStatType >(online_status_);
}
 void LoginResp::set_online_status(::antalk::common::UserStatType value) {
  assert(::antalk::common::UserStatType_IsValid(value));
  set_has_online_status();
  online_status_ = value;
  // @@protoc_insertion_point(field_set:antalk.apigw.LoginResp.online_status)
}

// optional .antalk.common.UserInfo user_info = 6;
bool LoginResp::has_user_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LoginResp::set_has_user_info() {
  _has_bits_[0] |= 0x00000020u;
}
void LoginResp::clear_has_user_info() {
  _has_bits_[0] &= ~0x00000020u;
}
void LoginResp::clear_user_info() {
  if (user_info_ != NULL) user_info_->::antalk::common::UserInfo::Clear();
  clear_has_user_info();
}
const ::antalk::common::UserInfo& LoginResp::user_info() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.LoginResp.user_info)
  return user_info_ != NULL ? *user_info_ : *default_instance_->user_info_;
}
::antalk::common::UserInfo* LoginResp::mutable_user_info() {
  set_has_user_info();
  if (user_info_ == NULL) {
    user_info_ = new ::antalk::common::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:antalk.apigw.LoginResp.user_info)
  return user_info_;
}
::antalk::common::UserInfo* LoginResp::release_user_info() {
  // @@protoc_insertion_point(field_release:antalk.apigw.LoginResp.user_info)
  clear_has_user_info();
  ::antalk::common::UserInfo* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
void LoginResp::set_allocated_user_info(::antalk::common::UserInfo* user_info) {
  delete user_info_;
  user_info_ = user_info;
  if (user_info) {
    set_has_user_info();
  } else {
    clear_has_user_info();
  }
  // @@protoc_insertion_point(field_set_allocated:antalk.apigw.LoginResp.user_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutReq::kUidFieldNumber;
const int LogoutReq::kTimeStampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutReq::LogoutReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:antalk.apigw.LogoutReq)
}

void LogoutReq::InitAsDefaultInstance() {
}

LogoutReq::LogoutReq(const LogoutReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:antalk.apigw.LogoutReq)
}

void LogoutReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_stamp_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LogoutReq::~LogoutReq() {
  // @@protoc_insertion_point(destructor:antalk.apigw.LogoutReq)
  SharedDtor();
}

void LogoutReq::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LogoutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogoutReq_descriptor_;
}

const LogoutReq& LogoutReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_apigw_2eproto();
  return *default_instance_;
}

LogoutReq* LogoutReq::default_instance_ = NULL;

LogoutReq* LogoutReq::New(::google::protobuf::Arena* arena) const {
  LogoutReq* n = new LogoutReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:antalk.apigw.LogoutReq)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_uid()) {
      uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    time_stamp_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LogoutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:antalk.apigw.LogoutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "antalk.apigw.LogoutReq.uid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_time_stamp;
        break;
      }

      // optional int64 time_stamp = 2;
      case 2: {
        if (tag == 16) {
         parse_time_stamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_stamp_)));
          set_has_time_stamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:antalk.apigw.LogoutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:antalk.apigw.LogoutReq)
  return false;
#undef DO_
}

void LogoutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:antalk.apigw.LogoutReq)
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.LogoutReq.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // optional int64 time_stamp = 2;
  if (has_time_stamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->time_stamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:antalk.apigw.LogoutReq)
}

::google::protobuf::uint8* LogoutReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:antalk.apigw.LogoutReq)
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.LogoutReq.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // optional int64 time_stamp = 2;
  if (has_time_stamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->time_stamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:antalk.apigw.LogoutReq)
  return target;
}

int LogoutReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:antalk.apigw.LogoutReq)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid());
    }

    // optional int64 time_stamp = 2;
    if (has_time_stamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time_stamp());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:antalk.apigw.LogoutReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LogoutReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:antalk.apigw.LogoutReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:antalk.apigw.LogoutReq)
    MergeFrom(*source);
  }
}

void LogoutReq::MergeFrom(const LogoutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:antalk.apigw.LogoutReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_has_uid();
      uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
    }
    if (from.has_time_stamp()) {
      set_time_stamp(from.time_stamp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LogoutReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:antalk.apigw.LogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutReq::CopyFrom(const LogoutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:antalk.apigw.LogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutReq::IsInitialized() const {

  return true;
}

void LogoutReq::Swap(LogoutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutReq::InternalSwap(LogoutReq* other) {
  uid_.Swap(&other->uid_);
  std::swap(time_stamp_, other->time_stamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogoutReq_descriptor_;
  metadata.reflection = LogoutReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutReq

// optional string uid = 1;
bool LogoutReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LogoutReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void LogoutReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void LogoutReq::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uid();
}
 const ::std::string& LogoutReq::uid() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.LogoutReq.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogoutReq::set_uid(const ::std::string& value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:antalk.apigw.LogoutReq.uid)
}
 void LogoutReq::set_uid(const char* value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:antalk.apigw.LogoutReq.uid)
}
 void LogoutReq::set_uid(const char* value, size_t size) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:antalk.apigw.LogoutReq.uid)
}
 ::std::string* LogoutReq::mutable_uid() {
  set_has_uid();
  // @@protoc_insertion_point(field_mutable:antalk.apigw.LogoutReq.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LogoutReq::release_uid() {
  // @@protoc_insertion_point(field_release:antalk.apigw.LogoutReq.uid)
  clear_has_uid();
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogoutReq::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    set_has_uid();
  } else {
    clear_has_uid();
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:antalk.apigw.LogoutReq.uid)
}

// optional int64 time_stamp = 2;
bool LogoutReq::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LogoutReq::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
void LogoutReq::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
void LogoutReq::clear_time_stamp() {
  time_stamp_ = GOOGLE_LONGLONG(0);
  clear_has_time_stamp();
}
 ::google::protobuf::int64 LogoutReq::time_stamp() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.LogoutReq.time_stamp)
  return time_stamp_;
}
 void LogoutReq::set_time_stamp(::google::protobuf::int64 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:antalk.apigw.LogoutReq.time_stamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutResp::LogoutResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:antalk.apigw.LogoutResp)
}

void LogoutResp::InitAsDefaultInstance() {
}

LogoutResp::LogoutResp(const LogoutResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:antalk.apigw.LogoutResp)
}

void LogoutResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LogoutResp::~LogoutResp() {
  // @@protoc_insertion_point(destructor:antalk.apigw.LogoutResp)
  SharedDtor();
}

void LogoutResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LogoutResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogoutResp_descriptor_;
}

const LogoutResp& LogoutResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_apigw_2eproto();
  return *default_instance_;
}

LogoutResp* LogoutResp::default_instance_ = NULL;

LogoutResp* LogoutResp::New(::google::protobuf::Arena* arena) const {
  LogoutResp* n = new LogoutResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutResp::Clear() {
// @@protoc_insertion_point(message_clear_start:antalk.apigw.LogoutResp)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LogoutResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:antalk.apigw.LogoutResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:antalk.apigw.LogoutResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:antalk.apigw.LogoutResp)
  return false;
#undef DO_
}

void LogoutResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:antalk.apigw.LogoutResp)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:antalk.apigw.LogoutResp)
}

::google::protobuf::uint8* LogoutResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:antalk.apigw.LogoutResp)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:antalk.apigw.LogoutResp)
  return target;
}

int LogoutResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:antalk.apigw.LogoutResp)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:antalk.apigw.LogoutResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LogoutResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:antalk.apigw.LogoutResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:antalk.apigw.LogoutResp)
    MergeFrom(*source);
  }
}

void LogoutResp::MergeFrom(const LogoutResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:antalk.apigw.LogoutResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LogoutResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:antalk.apigw.LogoutResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutResp::CopyFrom(const LogoutResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:antalk.apigw.LogoutResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutResp::IsInitialized() const {

  return true;
}

void LogoutResp::Swap(LogoutResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutResp::InternalSwap(LogoutResp* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogoutResp_descriptor_;
  metadata.reflection = LogoutResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutResp

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterNoityReq::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterNoityReq::RegisterNoityReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:antalk.apigw.RegisterNoityReq)
}

void RegisterNoityReq::InitAsDefaultInstance() {
}

RegisterNoityReq::RegisterNoityReq(const RegisterNoityReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:antalk.apigw.RegisterNoityReq)
}

void RegisterNoityReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RegisterNoityReq::~RegisterNoityReq() {
  // @@protoc_insertion_point(destructor:antalk.apigw.RegisterNoityReq)
  SharedDtor();
}

void RegisterNoityReq::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RegisterNoityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterNoityReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegisterNoityReq_descriptor_;
}

const RegisterNoityReq& RegisterNoityReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_apigw_2eproto();
  return *default_instance_;
}

RegisterNoityReq* RegisterNoityReq::default_instance_ = NULL;

RegisterNoityReq* RegisterNoityReq::New(::google::protobuf::Arena* arena) const {
  RegisterNoityReq* n = new RegisterNoityReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterNoityReq::Clear() {
// @@protoc_insertion_point(message_clear_start:antalk.apigw.RegisterNoityReq)
  if (has_uid()) {
    uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RegisterNoityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:antalk.apigw.RegisterNoityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "antalk.apigw.RegisterNoityReq.uid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:antalk.apigw.RegisterNoityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:antalk.apigw.RegisterNoityReq)
  return false;
#undef DO_
}

void RegisterNoityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:antalk.apigw.RegisterNoityReq)
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.RegisterNoityReq.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:antalk.apigw.RegisterNoityReq)
}

::google::protobuf::uint8* RegisterNoityReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:antalk.apigw.RegisterNoityReq)
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.RegisterNoityReq.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:antalk.apigw.RegisterNoityReq)
  return target;
}

int RegisterNoityReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:antalk.apigw.RegisterNoityReq)
  int total_size = 0;

  // optional string uid = 1;
  if (has_uid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterNoityReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:antalk.apigw.RegisterNoityReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RegisterNoityReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterNoityReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:antalk.apigw.RegisterNoityReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:antalk.apigw.RegisterNoityReq)
    MergeFrom(*source);
  }
}

void RegisterNoityReq::MergeFrom(const RegisterNoityReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:antalk.apigw.RegisterNoityReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_has_uid();
      uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RegisterNoityReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:antalk.apigw.RegisterNoityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterNoityReq::CopyFrom(const RegisterNoityReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:antalk.apigw.RegisterNoityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterNoityReq::IsInitialized() const {

  return true;
}

void RegisterNoityReq::Swap(RegisterNoityReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterNoityReq::InternalSwap(RegisterNoityReq* other) {
  uid_.Swap(&other->uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterNoityReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegisterNoityReq_descriptor_;
  metadata.reflection = RegisterNoityReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterNoityReq

// optional string uid = 1;
bool RegisterNoityReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RegisterNoityReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void RegisterNoityReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void RegisterNoityReq::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uid();
}
 const ::std::string& RegisterNoityReq::uid() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.RegisterNoityReq.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RegisterNoityReq::set_uid(const ::std::string& value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:antalk.apigw.RegisterNoityReq.uid)
}
 void RegisterNoityReq::set_uid(const char* value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:antalk.apigw.RegisterNoityReq.uid)
}
 void RegisterNoityReq::set_uid(const char* value, size_t size) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:antalk.apigw.RegisterNoityReq.uid)
}
 ::std::string* RegisterNoityReq::mutable_uid() {
  set_has_uid();
  // @@protoc_insertion_point(field_mutable:antalk.apigw.RegisterNoityReq.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RegisterNoityReq::release_uid() {
  // @@protoc_insertion_point(field_release:antalk.apigw.RegisterNoityReq.uid)
  clear_has_uid();
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RegisterNoityReq::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    set_has_uid();
  } else {
    clear_has_uid();
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:antalk.apigw.RegisterNoityReq.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Notify::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Notify::Notify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:antalk.apigw.Notify)
}

void Notify::InitAsDefaultInstance() {
}

Notify::Notify(const Notify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:antalk.apigw.Notify)
}

void Notify::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Notify::~Notify() {
  // @@protoc_insertion_point(destructor:antalk.apigw.Notify)
  SharedDtor();
}

void Notify::SharedDtor() {
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Notify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Notify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Notify_descriptor_;
}

const Notify& Notify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_apigw_2eproto();
  return *default_instance_;
}

Notify* Notify::default_instance_ = NULL;

Notify* Notify::New(::google::protobuf::Arena* arena) const {
  Notify* n = new Notify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:antalk.apigw.Notify)
  if (has_body()) {
    body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Notify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:antalk.apigw.Notify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string body = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->body().data(), this->body().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "antalk.apigw.Notify.body");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:antalk.apigw.Notify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:antalk.apigw.Notify)
  return false;
#undef DO_
}

void Notify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:antalk.apigw.Notify)
  // optional string body = 1;
  if (has_body()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body().data(), this->body().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.Notify.body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:antalk.apigw.Notify)
}

::google::protobuf::uint8* Notify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:antalk.apigw.Notify)
  // optional string body = 1;
  if (has_body()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body().data(), this->body().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.Notify.body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->body(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:antalk.apigw.Notify)
  return target;
}

int Notify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:antalk.apigw.Notify)
  int total_size = 0;

  // optional string body = 1;
  if (has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Notify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:antalk.apigw.Notify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Notify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Notify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:antalk.apigw.Notify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:antalk.apigw.Notify)
    MergeFrom(*source);
  }
}

void Notify::MergeFrom(const Notify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:antalk.apigw.Notify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_body()) {
      set_has_body();
      body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Notify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:antalk.apigw.Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notify::CopyFrom(const Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:antalk.apigw.Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notify::IsInitialized() const {

  return true;
}

void Notify::Swap(Notify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Notify::InternalSwap(Notify* other) {
  body_.Swap(&other->body_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Notify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Notify_descriptor_;
  metadata.reflection = Notify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Notify

// optional string body = 1;
bool Notify::has_body() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Notify::set_has_body() {
  _has_bits_[0] |= 0x00000001u;
}
void Notify::clear_has_body() {
  _has_bits_[0] &= ~0x00000001u;
}
void Notify::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
 const ::std::string& Notify::body() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.Notify.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Notify::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:antalk.apigw.Notify.body)
}
 void Notify::set_body(const char* value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:antalk.apigw.Notify.body)
}
 void Notify::set_body(const char* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:antalk.apigw.Notify.body)
}
 ::std::string* Notify::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:antalk.apigw.Notify.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Notify::release_body() {
  // @@protoc_insertion_point(field_release:antalk.apigw.Notify.body)
  clear_has_body();
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Notify::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:antalk.apigw.Notify.body)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerKickoutNotifyReq::kUidFieldNumber;
const int ServerKickoutNotifyReq::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerKickoutNotifyReq::ServerKickoutNotifyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:antalk.apigw.ServerKickoutNotifyReq)
}

void ServerKickoutNotifyReq::InitAsDefaultInstance() {
}

ServerKickoutNotifyReq::ServerKickoutNotifyReq(const ServerKickoutNotifyReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:antalk.apigw.ServerKickoutNotifyReq)
}

void ServerKickoutNotifyReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerKickoutNotifyReq::~ServerKickoutNotifyReq() {
  // @@protoc_insertion_point(destructor:antalk.apigw.ServerKickoutNotifyReq)
  SharedDtor();
}

void ServerKickoutNotifyReq::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ServerKickoutNotifyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerKickoutNotifyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerKickoutNotifyReq_descriptor_;
}

const ServerKickoutNotifyReq& ServerKickoutNotifyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_apigw_2eproto();
  return *default_instance_;
}

ServerKickoutNotifyReq* ServerKickoutNotifyReq::default_instance_ = NULL;

ServerKickoutNotifyReq* ServerKickoutNotifyReq::New(::google::protobuf::Arena* arena) const {
  ServerKickoutNotifyReq* n = new ServerKickoutNotifyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerKickoutNotifyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:antalk.apigw.ServerKickoutNotifyReq)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_uid()) {
      uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    reason_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ServerKickoutNotifyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:antalk.apigw.ServerKickoutNotifyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "antalk.apigw.ServerKickoutNotifyReq.uid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reason;
        break;
      }

      // optional .antalk.common.KickoutReason reason = 2;
      case 2: {
        if (tag == 16) {
         parse_reason:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::antalk::common::KickoutReason_IsValid(value)) {
            set_reason(static_cast< ::antalk::common::KickoutReason >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:antalk.apigw.ServerKickoutNotifyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:antalk.apigw.ServerKickoutNotifyReq)
  return false;
#undef DO_
}

void ServerKickoutNotifyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:antalk.apigw.ServerKickoutNotifyReq)
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.ServerKickoutNotifyReq.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // optional .antalk.common.KickoutReason reason = 2;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:antalk.apigw.ServerKickoutNotifyReq)
}

::google::protobuf::uint8* ServerKickoutNotifyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:antalk.apigw.ServerKickoutNotifyReq)
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.apigw.ServerKickoutNotifyReq.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // optional .antalk.common.KickoutReason reason = 2;
  if (has_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:antalk.apigw.ServerKickoutNotifyReq)
  return target;
}

int ServerKickoutNotifyReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:antalk.apigw.ServerKickoutNotifyReq)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid());
    }

    // optional .antalk.common.KickoutReason reason = 2;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerKickoutNotifyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:antalk.apigw.ServerKickoutNotifyReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ServerKickoutNotifyReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerKickoutNotifyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:antalk.apigw.ServerKickoutNotifyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:antalk.apigw.ServerKickoutNotifyReq)
    MergeFrom(*source);
  }
}

void ServerKickoutNotifyReq::MergeFrom(const ServerKickoutNotifyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:antalk.apigw.ServerKickoutNotifyReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_has_uid();
      uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
    }
    if (from.has_reason()) {
      set_reason(from.reason());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ServerKickoutNotifyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:antalk.apigw.ServerKickoutNotifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerKickoutNotifyReq::CopyFrom(const ServerKickoutNotifyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:antalk.apigw.ServerKickoutNotifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerKickoutNotifyReq::IsInitialized() const {

  return true;
}

void ServerKickoutNotifyReq::Swap(ServerKickoutNotifyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerKickoutNotifyReq::InternalSwap(ServerKickoutNotifyReq* other) {
  uid_.Swap(&other->uid_);
  std::swap(reason_, other->reason_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerKickoutNotifyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerKickoutNotifyReq_descriptor_;
  metadata.reflection = ServerKickoutNotifyReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerKickoutNotifyReq

// optional string uid = 1;
bool ServerKickoutNotifyReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ServerKickoutNotifyReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void ServerKickoutNotifyReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ServerKickoutNotifyReq::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uid();
}
 const ::std::string& ServerKickoutNotifyReq::uid() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.ServerKickoutNotifyReq.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerKickoutNotifyReq::set_uid(const ::std::string& value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:antalk.apigw.ServerKickoutNotifyReq.uid)
}
 void ServerKickoutNotifyReq::set_uid(const char* value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:antalk.apigw.ServerKickoutNotifyReq.uid)
}
 void ServerKickoutNotifyReq::set_uid(const char* value, size_t size) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:antalk.apigw.ServerKickoutNotifyReq.uid)
}
 ::std::string* ServerKickoutNotifyReq::mutable_uid() {
  set_has_uid();
  // @@protoc_insertion_point(field_mutable:antalk.apigw.ServerKickoutNotifyReq.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ServerKickoutNotifyReq::release_uid() {
  // @@protoc_insertion_point(field_release:antalk.apigw.ServerKickoutNotifyReq.uid)
  clear_has_uid();
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerKickoutNotifyReq::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    set_has_uid();
  } else {
    clear_has_uid();
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:antalk.apigw.ServerKickoutNotifyReq.uid)
}

// optional .antalk.common.KickoutReason reason = 2;
bool ServerKickoutNotifyReq::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ServerKickoutNotifyReq::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
void ServerKickoutNotifyReq::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
void ServerKickoutNotifyReq::clear_reason() {
  reason_ = 1;
  clear_has_reason();
}
 ::antalk::common::KickoutReason ServerKickoutNotifyReq::reason() const {
  // @@protoc_insertion_point(field_get:antalk.apigw.ServerKickoutNotifyReq.reason)
  return static_cast< ::antalk::common::KickoutReason >(reason_);
}
 void ServerKickoutNotifyReq::set_reason(::antalk::common::KickoutReason value) {
  assert(::antalk::common::KickoutReason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:antalk.apigw.ServerKickoutNotifyReq.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerKickoutNotifyResp::ServerKickoutNotifyResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:antalk.apigw.ServerKickoutNotifyResp)
}

void ServerKickoutNotifyResp::InitAsDefaultInstance() {
}

ServerKickoutNotifyResp::ServerKickoutNotifyResp(const ServerKickoutNotifyResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:antalk.apigw.ServerKickoutNotifyResp)
}

void ServerKickoutNotifyResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerKickoutNotifyResp::~ServerKickoutNotifyResp() {
  // @@protoc_insertion_point(destructor:antalk.apigw.ServerKickoutNotifyResp)
  SharedDtor();
}

void ServerKickoutNotifyResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServerKickoutNotifyResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerKickoutNotifyResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerKickoutNotifyResp_descriptor_;
}

const ServerKickoutNotifyResp& ServerKickoutNotifyResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_apigw_2eproto();
  return *default_instance_;
}

ServerKickoutNotifyResp* ServerKickoutNotifyResp::default_instance_ = NULL;

ServerKickoutNotifyResp* ServerKickoutNotifyResp::New(::google::protobuf::Arena* arena) const {
  ServerKickoutNotifyResp* n = new ServerKickoutNotifyResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerKickoutNotifyResp::Clear() {
// @@protoc_insertion_point(message_clear_start:antalk.apigw.ServerKickoutNotifyResp)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ServerKickoutNotifyResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:antalk.apigw.ServerKickoutNotifyResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:antalk.apigw.ServerKickoutNotifyResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:antalk.apigw.ServerKickoutNotifyResp)
  return false;
#undef DO_
}

void ServerKickoutNotifyResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:antalk.apigw.ServerKickoutNotifyResp)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:antalk.apigw.ServerKickoutNotifyResp)
}

::google::protobuf::uint8* ServerKickoutNotifyResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:antalk.apigw.ServerKickoutNotifyResp)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:antalk.apigw.ServerKickoutNotifyResp)
  return target;
}

int ServerKickoutNotifyResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:antalk.apigw.ServerKickoutNotifyResp)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerKickoutNotifyResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:antalk.apigw.ServerKickoutNotifyResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ServerKickoutNotifyResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerKickoutNotifyResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:antalk.apigw.ServerKickoutNotifyResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:antalk.apigw.ServerKickoutNotifyResp)
    MergeFrom(*source);
  }
}

void ServerKickoutNotifyResp::MergeFrom(const ServerKickoutNotifyResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:antalk.apigw.ServerKickoutNotifyResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ServerKickoutNotifyResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:antalk.apigw.ServerKickoutNotifyResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerKickoutNotifyResp::CopyFrom(const ServerKickoutNotifyResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:antalk.apigw.ServerKickoutNotifyResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerKickoutNotifyResp::IsInitialized() const {

  return true;
}

void ServerKickoutNotifyResp::Swap(ServerKickoutNotifyResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerKickoutNotifyResp::InternalSwap(ServerKickoutNotifyResp* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerKickoutNotifyResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerKickoutNotifyResp_descriptor_;
  metadata.reflection = ServerKickoutNotifyResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerKickoutNotifyResp

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

LoginService::~LoginService() {}

const ::google::protobuf::ServiceDescriptor* LoginService::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginService_descriptor_;
}

const ::google::protobuf::ServiceDescriptor* LoginService::GetDescriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginService_descriptor_;
}

void LoginService::Login(::google::protobuf::RpcController* controller,
                         const ::antalk::apigw::LoginReq*,
                         ::antalk::apigw::LoginResp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Login() not implemented.");
  done->Run();
}

void LoginService::Logout(::google::protobuf::RpcController* controller,
                         const ::antalk::apigw::LogoutReq*,
                         ::antalk::apigw::LogoutResp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Logout() not implemented.");
  done->Run();
}

void LoginService::RegisterNoity(::google::protobuf::RpcController* controller,
                         const ::antalk::apigw::RegisterNoityReq*,
                         ::antalk::apigw::Notify*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RegisterNoity() not implemented.");
  done->Run();
}

void LoginService::ServerKickoutNotify(::google::protobuf::RpcController* controller,
                         const ::antalk::apigw::ServerKickoutNotifyReq*,
                         ::antalk::apigw::ServerKickoutNotifyResp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ServerKickoutNotify() not implemented.");
  done->Run();
}

void LoginService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), LoginService_descriptor_);
  switch(method->index()) {
    case 0:
      Login(controller,
             ::google::protobuf::down_cast<const ::antalk::apigw::LoginReq*>(request),
             ::google::protobuf::down_cast< ::antalk::apigw::LoginResp*>(response),
             done);
      break;
    case 1:
      Logout(controller,
             ::google::protobuf::down_cast<const ::antalk::apigw::LogoutReq*>(request),
             ::google::protobuf::down_cast< ::antalk::apigw::LogoutResp*>(response),
             done);
      break;
    case 2:
      RegisterNoity(controller,
             ::google::protobuf::down_cast<const ::antalk::apigw::RegisterNoityReq*>(request),
             ::google::protobuf::down_cast< ::antalk::apigw::Notify*>(response),
             done);
      break;
    case 3:
      ServerKickoutNotify(controller,
             ::google::protobuf::down_cast<const ::antalk::apigw::ServerKickoutNotifyReq*>(request),
             ::google::protobuf::down_cast< ::antalk::apigw::ServerKickoutNotifyResp*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& LoginService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::antalk::apigw::LoginReq::default_instance();
    case 1:
      return ::antalk::apigw::LogoutReq::default_instance();
    case 2:
      return ::antalk::apigw::RegisterNoityReq::default_instance();
    case 3:
      return ::antalk::apigw::ServerKickoutNotifyReq::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& LoginService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::antalk::apigw::LoginResp::default_instance();
    case 1:
      return ::antalk::apigw::LogoutResp::default_instance();
    case 2:
      return ::antalk::apigw::Notify::default_instance();
    case 3:
      return ::antalk::apigw::ServerKickoutNotifyResp::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

LoginService_Stub::LoginService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
LoginService_Stub::LoginService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
LoginService_Stub::~LoginService_Stub() {
  if (owns_channel_) delete channel_;
}

void LoginService_Stub::Login(::google::protobuf::RpcController* controller,
                              const ::antalk::apigw::LoginReq* request,
                              ::antalk::apigw::LoginResp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void LoginService_Stub::Logout(::google::protobuf::RpcController* controller,
                              const ::antalk::apigw::LogoutReq* request,
                              ::antalk::apigw::LogoutResp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void LoginService_Stub::RegisterNoity(::google::protobuf::RpcController* controller,
                              const ::antalk::apigw::RegisterNoityReq* request,
                              ::antalk::apigw::Notify* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void LoginService_Stub::ServerKickoutNotify(::google::protobuf::RpcController* controller,
                              const ::antalk::apigw::ServerKickoutNotifyReq* request,
                              ::antalk::apigw::ServerKickoutNotifyResp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
// ===================================================================

MsgService::~MsgService() {}

const ::google::protobuf::ServiceDescriptor* MsgService::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgService_descriptor_;
}

const ::google::protobuf::ServiceDescriptor* MsgService::GetDescriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgService_descriptor_;
}

void MsgService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), MsgService_descriptor_);
  switch(method->index()) {
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& MsgService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& MsgService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

MsgService_Stub::MsgService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
MsgService_Stub::MsgService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
MsgService_Stub::~MsgService_Stub() {
  if (owns_channel_) delete channel_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace apigw
}  // namespace antalk

// @@protoc_insertion_point(global_scope)
