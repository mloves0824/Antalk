// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

#include "data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace antalk {
namespace data {
class GetUserInfoReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetUserInfoReq>
      _instance;
} _GetUserInfoReq_default_instance_;
class GetUserInfoResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetUserInfoRes>
      _instance;
} _GetUserInfoRes_default_instance_;
class SetUserStatusReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetUserStatusReq>
      _instance;
} _SetUserStatusReq_default_instance_;
class SetUserStatusRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetUserStatusResp>
      _instance;
} _SetUserStatusResp_default_instance_;
class SaveMsgReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SaveMsgReq>
      _instance;
} _SaveMsgReq_default_instance_;
class SaveMsgRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SaveMsgResp>
      _instance;
} _SaveMsgResp_default_instance_;
}  // namespace data
}  // namespace antalk
namespace protobuf_data_2eproto {
void InitDefaultsGetUserInfoReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::antalk::data::_GetUserInfoReq_default_instance_;
    new (ptr) ::antalk::data::GetUserInfoReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::antalk::data::GetUserInfoReq::InitAsDefaultInstance();
}

void InitDefaultsGetUserInfoReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetUserInfoReqImpl);
}

void InitDefaultsGetUserInfoResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2eproto::InitDefaultsUserInfo();
  {
    void* ptr = &::antalk::data::_GetUserInfoRes_default_instance_;
    new (ptr) ::antalk::data::GetUserInfoRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::antalk::data::GetUserInfoRes::InitAsDefaultInstance();
}

void InitDefaultsGetUserInfoRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetUserInfoResImpl);
}

void InitDefaultsSetUserStatusReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::antalk::data::_SetUserStatusReq_default_instance_;
    new (ptr) ::antalk::data::SetUserStatusReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::antalk::data::SetUserStatusReq::InitAsDefaultInstance();
}

void InitDefaultsSetUserStatusReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetUserStatusReqImpl);
}

void InitDefaultsSetUserStatusRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::antalk::data::_SetUserStatusResp_default_instance_;
    new (ptr) ::antalk::data::SetUserStatusResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::antalk::data::SetUserStatusResp::InitAsDefaultInstance();
}

void InitDefaultsSetUserStatusResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetUserStatusRespImpl);
}

void InitDefaultsSaveMsgReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2eproto::InitDefaultsMsgInfo();
  {
    void* ptr = &::antalk::data::_SaveMsgReq_default_instance_;
    new (ptr) ::antalk::data::SaveMsgReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::antalk::data::SaveMsgReq::InitAsDefaultInstance();
}

void InitDefaultsSaveMsgReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSaveMsgReqImpl);
}

void InitDefaultsSaveMsgRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::antalk::data::_SaveMsgResp_default_instance_;
    new (ptr) ::antalk::data::SaveMsgResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::antalk::data::SaveMsgResp::InitAsDefaultInstance();
}

void InitDefaultsSaveMsgResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSaveMsgRespImpl);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::GetUserInfoReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::GetUserInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::GetUserInfoReq, saas_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::GetUserInfoReq, uid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::GetUserInfoRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::GetUserInfoRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::GetUserInfoRes, user_info_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SetUserStatusReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SetUserStatusReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SetUserStatusReq, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SetUserStatusReq, dev_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SetUserStatusReq, session_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SetUserStatusReq, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SetUserStatusReq, login_info_),
  0,
  3,
  1,
  4,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SetUserStatusResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SetUserStatusResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SetUserStatusResp, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SaveMsgReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SaveMsgReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SaveMsgReq, msg_info_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SaveMsgResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SaveMsgResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SaveMsgResp, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::antalk::data::SaveMsgResp, result_code_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::antalk::data::GetUserInfoReq)},
  { 9, 15, sizeof(::antalk::data::GetUserInfoRes)},
  { 16, 26, sizeof(::antalk::data::SetUserStatusReq)},
  { 31, 37, sizeof(::antalk::data::SetUserStatusResp)},
  { 38, 44, sizeof(::antalk::data::SaveMsgReq)},
  { 45, 52, sizeof(::antalk::data::SaveMsgResp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::antalk::data::_GetUserInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::antalk::data::_GetUserInfoRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::antalk::data::_SetUserStatusReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::antalk::data::_SetUserStatusResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::antalk::data::_SaveMsgReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::antalk::data::_SaveMsgResp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ndata.proto\022\013antalk.data\032\014common.proto\""
      ".\n\016GetUserInfoReq\022\017\n\007saas_id\030\001 \001(\r\022\013\n\003ui"
      "d\030\002 \001(\t\"<\n\016GetUserInfoRes\022*\n\tuser_info\030\001"
      " \001(\0132\027.antalk.common.UserInfo\"f\n\020SetUser"
      "StatusReq\022\013\n\003uid\030\001 \001(\t\022\020\n\010dev_type\030\002 \001(\005"
      "\022\017\n\007session\030\003 \001(\t\022\016\n\006status\030\004 \001(\005\022\022\n\nlog"
      "in_info\030\005 \001(\t\">\n\021SetUserStatusResp\022)\n\006re"
      "sult\030\001 \001(\0162\031.antalk.common.ResultType\"6\n"
      "\nSaveMsgReq\022(\n\010msg_info\030\001 \001(\0132\026.antalk.c"
      "ommon.MsgInfo\"M\n\013SaveMsgResp\022\016\n\006msg_id\030\001"
      " \001(\003\022.\n\013result_code\030\002 \001(\0162\031.antalk.commo"
      "n.ResultType2\254\001\n\021UserStatusService\022G\n\013Ge"
      "tUserInfo\022\033.antalk.data.GetUserInfoReq\032\033"
      ".antalk.data.GetUserInfoRes\022N\n\rSetUserSt"
      "atus\022\035.antalk.data.SetUserStatusReq\032\036.an"
      "talk.data.SetUserStatusResp2J\n\nMsgServic"
      "e\022<\n\007SaveMsg\022\027.antalk.data.SaveMsgReq\032\030."
      "antalk.data.SaveMsgRespB\022\n\rcom.antalk.pb"
      "\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 723);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "data.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_data_2eproto
namespace antalk {
namespace data {

// ===================================================================

void GetUserInfoReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUserInfoReq::kSaasIdFieldNumber;
const int GetUserInfoReq::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUserInfoReq::GetUserInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_data_2eproto::InitDefaultsGetUserInfoReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:antalk.data.GetUserInfoReq)
}
GetUserInfoReq::GetUserInfoReq(const GetUserInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uid()) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  saas_id_ = from.saas_id_;
  // @@protoc_insertion_point(copy_constructor:antalk.data.GetUserInfoReq)
}

void GetUserInfoReq::SharedCtor() {
  _cached_size_ = 0;
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  saas_id_ = 0u;
}

GetUserInfoReq::~GetUserInfoReq() {
  // @@protoc_insertion_point(destructor:antalk.data.GetUserInfoReq)
  SharedDtor();
}

void GetUserInfoReq::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetUserInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetUserInfoReq::descriptor() {
  ::protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUserInfoReq& GetUserInfoReq::default_instance() {
  ::protobuf_data_2eproto::InitDefaultsGetUserInfoReq();
  return *internal_default_instance();
}

GetUserInfoReq* GetUserInfoReq::New(::google::protobuf::Arena* arena) const {
  GetUserInfoReq* n = new GetUserInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUserInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:antalk.data.GetUserInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!uid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*uid_.UnsafeRawStringPointer())->clear();
  }
  saas_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetUserInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:antalk.data.GetUserInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 saas_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_saas_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &saas_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "antalk.data.GetUserInfoReq.uid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:antalk.data.GetUserInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:antalk.data.GetUserInfoReq)
  return false;
#undef DO_
}

void GetUserInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:antalk.data.GetUserInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 saas_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->saas_id(), output);
  }

  // optional string uid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.data.GetUserInfoReq.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:antalk.data.GetUserInfoReq)
}

::google::protobuf::uint8* GetUserInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:antalk.data.GetUserInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 saas_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->saas_id(), target);
  }

  // optional string uid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.data.GetUserInfoReq.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:antalk.data.GetUserInfoReq)
  return target;
}

size_t GetUserInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:antalk.data.GetUserInfoReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string uid = 2;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid());
    }

    // optional uint32 saas_id = 1;
    if (has_saas_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->saas_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUserInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:antalk.data.GetUserInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUserInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUserInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:antalk.data.GetUserInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:antalk.data.GetUserInfoReq)
    MergeFrom(*source);
  }
}

void GetUserInfoReq::MergeFrom(const GetUserInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:antalk.data.GetUserInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_uid();
      uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
    }
    if (cached_has_bits & 0x00000002u) {
      saas_id_ = from.saas_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetUserInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:antalk.data.GetUserInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUserInfoReq::CopyFrom(const GetUserInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:antalk.data.GetUserInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserInfoReq::IsInitialized() const {
  return true;
}

void GetUserInfoReq::Swap(GetUserInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUserInfoReq::InternalSwap(GetUserInfoReq* other) {
  using std::swap;
  uid_.Swap(&other->uid_);
  swap(saas_id_, other->saas_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetUserInfoReq::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetUserInfoRes::InitAsDefaultInstance() {
  ::antalk::data::_GetUserInfoRes_default_instance_._instance.get_mutable()->user_info_ = const_cast< ::antalk::common::UserInfo*>(
      ::antalk::common::UserInfo::internal_default_instance());
}
void GetUserInfoRes::clear_user_info() {
  if (user_info_ != NULL) user_info_->Clear();
  clear_has_user_info();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUserInfoRes::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUserInfoRes::GetUserInfoRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_data_2eproto::InitDefaultsGetUserInfoRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:antalk.data.GetUserInfoRes)
}
GetUserInfoRes::GetUserInfoRes(const GetUserInfoRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_info()) {
    user_info_ = new ::antalk::common::UserInfo(*from.user_info_);
  } else {
    user_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:antalk.data.GetUserInfoRes)
}

void GetUserInfoRes::SharedCtor() {
  _cached_size_ = 0;
  user_info_ = NULL;
}

GetUserInfoRes::~GetUserInfoRes() {
  // @@protoc_insertion_point(destructor:antalk.data.GetUserInfoRes)
  SharedDtor();
}

void GetUserInfoRes::SharedDtor() {
  if (this != internal_default_instance()) delete user_info_;
}

void GetUserInfoRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetUserInfoRes::descriptor() {
  ::protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUserInfoRes& GetUserInfoRes::default_instance() {
  ::protobuf_data_2eproto::InitDefaultsGetUserInfoRes();
  return *internal_default_instance();
}

GetUserInfoRes* GetUserInfoRes::New(::google::protobuf::Arena* arena) const {
  GetUserInfoRes* n = new GetUserInfoRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUserInfoRes::Clear() {
// @@protoc_insertion_point(message_clear_start:antalk.data.GetUserInfoRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(user_info_ != NULL);
    user_info_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetUserInfoRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:antalk.data.GetUserInfoRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .antalk.common.UserInfo user_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:antalk.data.GetUserInfoRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:antalk.data.GetUserInfoRes)
  return false;
#undef DO_
}

void GetUserInfoRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:antalk.data.GetUserInfoRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .antalk.common.UserInfo user_info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->user_info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:antalk.data.GetUserInfoRes)
}

::google::protobuf::uint8* GetUserInfoRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:antalk.data.GetUserInfoRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .antalk.common.UserInfo user_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->user_info_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:antalk.data.GetUserInfoRes)
  return target;
}

size_t GetUserInfoRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:antalk.data.GetUserInfoRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .antalk.common.UserInfo user_info = 1;
  if (has_user_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->user_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUserInfoRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:antalk.data.GetUserInfoRes)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUserInfoRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUserInfoRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:antalk.data.GetUserInfoRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:antalk.data.GetUserInfoRes)
    MergeFrom(*source);
  }
}

void GetUserInfoRes::MergeFrom(const GetUserInfoRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:antalk.data.GetUserInfoRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user_info()) {
    mutable_user_info()->::antalk::common::UserInfo::MergeFrom(from.user_info());
  }
}

void GetUserInfoRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:antalk.data.GetUserInfoRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUserInfoRes::CopyFrom(const GetUserInfoRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:antalk.data.GetUserInfoRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserInfoRes::IsInitialized() const {
  return true;
}

void GetUserInfoRes::Swap(GetUserInfoRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUserInfoRes::InternalSwap(GetUserInfoRes* other) {
  using std::swap;
  swap(user_info_, other->user_info_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetUserInfoRes::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetUserStatusReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetUserStatusReq::kUidFieldNumber;
const int SetUserStatusReq::kDevTypeFieldNumber;
const int SetUserStatusReq::kSessionFieldNumber;
const int SetUserStatusReq::kStatusFieldNumber;
const int SetUserStatusReq::kLoginInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetUserStatusReq::SetUserStatusReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_data_2eproto::InitDefaultsSetUserStatusReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:antalk.data.SetUserStatusReq)
}
SetUserStatusReq::SetUserStatusReq(const SetUserStatusReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uid()) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_session()) {
    session_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_);
  }
  login_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_login_info()) {
    login_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_info_);
  }
  ::memcpy(&dev_type_, &from.dev_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&dev_type_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:antalk.data.SetUserStatusReq)
}

void SetUserStatusReq::SharedCtor() {
  _cached_size_ = 0;
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dev_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&dev_type_)) + sizeof(status_));
}

SetUserStatusReq::~SetUserStatusReq() {
  // @@protoc_insertion_point(destructor:antalk.data.SetUserStatusReq)
  SharedDtor();
}

void SetUserStatusReq::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetUserStatusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetUserStatusReq::descriptor() {
  ::protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetUserStatusReq& SetUserStatusReq::default_instance() {
  ::protobuf_data_2eproto::InitDefaultsSetUserStatusReq();
  return *internal_default_instance();
}

SetUserStatusReq* SetUserStatusReq::New(::google::protobuf::Arena* arena) const {
  SetUserStatusReq* n = new SetUserStatusReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetUserStatusReq::Clear() {
// @@protoc_insertion_point(message_clear_start:antalk.data.SetUserStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!uid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*uid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!session_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*session_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!login_info_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*login_info_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&dev_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&status_) -
        reinterpret_cast<char*>(&dev_type_)) + sizeof(status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetUserStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:antalk.data.SetUserStatusReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "antalk.data.SetUserStatusReq.uid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 dev_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_dev_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dev_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string session = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->session().data(), static_cast<int>(this->session().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "antalk.data.SetUserStatusReq.session");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string login_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->login_info().data(), static_cast<int>(this->login_info().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "antalk.data.SetUserStatusReq.login_info");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:antalk.data.SetUserStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:antalk.data.SetUserStatusReq)
  return false;
#undef DO_
}

void SetUserStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:antalk.data.SetUserStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string uid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.data.SetUserStatusReq.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // optional int32 dev_type = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dev_type(), output);
  }

  // optional string session = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->session().data(), static_cast<int>(this->session().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.data.SetUserStatusReq.session");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->session(), output);
  }

  // optional int32 status = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->status(), output);
  }

  // optional string login_info = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->login_info().data(), static_cast<int>(this->login_info().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.data.SetUserStatusReq.login_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->login_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:antalk.data.SetUserStatusReq)
}

::google::protobuf::uint8* SetUserStatusReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:antalk.data.SetUserStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string uid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.data.SetUserStatusReq.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // optional int32 dev_type = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dev_type(), target);
  }

  // optional string session = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->session().data(), static_cast<int>(this->session().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.data.SetUserStatusReq.session");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->session(), target);
  }

  // optional int32 status = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->status(), target);
  }

  // optional string login_info = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->login_info().data(), static_cast<int>(this->login_info().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "antalk.data.SetUserStatusReq.login_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->login_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:antalk.data.SetUserStatusReq)
  return target;
}

size_t SetUserStatusReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:antalk.data.SetUserStatusReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid());
    }

    // optional string session = 3;
    if (has_session()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->session());
    }

    // optional string login_info = 5;
    if (has_login_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->login_info());
    }

    // optional int32 dev_type = 2;
    if (has_dev_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dev_type());
    }

    // optional int32 status = 4;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetUserStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:antalk.data.SetUserStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetUserStatusReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetUserStatusReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:antalk.data.SetUserStatusReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:antalk.data.SetUserStatusReq)
    MergeFrom(*source);
  }
}

void SetUserStatusReq::MergeFrom(const SetUserStatusReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:antalk.data.SetUserStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_uid();
      uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_session();
      session_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_login_info();
      login_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_info_);
    }
    if (cached_has_bits & 0x00000008u) {
      dev_type_ = from.dev_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetUserStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:antalk.data.SetUserStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetUserStatusReq::CopyFrom(const SetUserStatusReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:antalk.data.SetUserStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUserStatusReq::IsInitialized() const {
  return true;
}

void SetUserStatusReq::Swap(SetUserStatusReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetUserStatusReq::InternalSwap(SetUserStatusReq* other) {
  using std::swap;
  uid_.Swap(&other->uid_);
  session_.Swap(&other->session_);
  login_info_.Swap(&other->login_info_);
  swap(dev_type_, other->dev_type_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetUserStatusReq::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetUserStatusResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetUserStatusResp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetUserStatusResp::SetUserStatusResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_data_2eproto::InitDefaultsSetUserStatusResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:antalk.data.SetUserStatusResp)
}
SetUserStatusResp::SetUserStatusResp(const SetUserStatusResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:antalk.data.SetUserStatusResp)
}

void SetUserStatusResp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
}

SetUserStatusResp::~SetUserStatusResp() {
  // @@protoc_insertion_point(destructor:antalk.data.SetUserStatusResp)
  SharedDtor();
}

void SetUserStatusResp::SharedDtor() {
}

void SetUserStatusResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetUserStatusResp::descriptor() {
  ::protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetUserStatusResp& SetUserStatusResp::default_instance() {
  ::protobuf_data_2eproto::InitDefaultsSetUserStatusResp();
  return *internal_default_instance();
}

SetUserStatusResp* SetUserStatusResp::New(::google::protobuf::Arena* arena) const {
  SetUserStatusResp* n = new SetUserStatusResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetUserStatusResp::Clear() {
// @@protoc_insertion_point(message_clear_start:antalk.data.SetUserStatusResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetUserStatusResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:antalk.data.SetUserStatusResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .antalk.common.ResultType result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::antalk::common::ResultType_IsValid(value)) {
            set_result(static_cast< ::antalk::common::ResultType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:antalk.data.SetUserStatusResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:antalk.data.SetUserStatusResp)
  return false;
#undef DO_
}

void SetUserStatusResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:antalk.data.SetUserStatusResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .antalk.common.ResultType result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:antalk.data.SetUserStatusResp)
}

::google::protobuf::uint8* SetUserStatusResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:antalk.data.SetUserStatusResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .antalk.common.ResultType result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:antalk.data.SetUserStatusResp)
  return target;
}

size_t SetUserStatusResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:antalk.data.SetUserStatusResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .antalk.common.ResultType result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetUserStatusResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:antalk.data.SetUserStatusResp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetUserStatusResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetUserStatusResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:antalk.data.SetUserStatusResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:antalk.data.SetUserStatusResp)
    MergeFrom(*source);
  }
}

void SetUserStatusResp::MergeFrom(const SetUserStatusResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:antalk.data.SetUserStatusResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void SetUserStatusResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:antalk.data.SetUserStatusResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetUserStatusResp::CopyFrom(const SetUserStatusResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:antalk.data.SetUserStatusResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUserStatusResp::IsInitialized() const {
  return true;
}

void SetUserStatusResp::Swap(SetUserStatusResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetUserStatusResp::InternalSwap(SetUserStatusResp* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetUserStatusResp::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SaveMsgReq::InitAsDefaultInstance() {
  ::antalk::data::_SaveMsgReq_default_instance_._instance.get_mutable()->msg_info_ = const_cast< ::antalk::common::MsgInfo*>(
      ::antalk::common::MsgInfo::internal_default_instance());
}
void SaveMsgReq::clear_msg_info() {
  if (msg_info_ != NULL) msg_info_->Clear();
  clear_has_msg_info();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveMsgReq::kMsgInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveMsgReq::SaveMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_data_2eproto::InitDefaultsSaveMsgReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:antalk.data.SaveMsgReq)
}
SaveMsgReq::SaveMsgReq(const SaveMsgReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg_info()) {
    msg_info_ = new ::antalk::common::MsgInfo(*from.msg_info_);
  } else {
    msg_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:antalk.data.SaveMsgReq)
}

void SaveMsgReq::SharedCtor() {
  _cached_size_ = 0;
  msg_info_ = NULL;
}

SaveMsgReq::~SaveMsgReq() {
  // @@protoc_insertion_point(destructor:antalk.data.SaveMsgReq)
  SharedDtor();
}

void SaveMsgReq::SharedDtor() {
  if (this != internal_default_instance()) delete msg_info_;
}

void SaveMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveMsgReq::descriptor() {
  ::protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SaveMsgReq& SaveMsgReq::default_instance() {
  ::protobuf_data_2eproto::InitDefaultsSaveMsgReq();
  return *internal_default_instance();
}

SaveMsgReq* SaveMsgReq::New(::google::protobuf::Arena* arena) const {
  SaveMsgReq* n = new SaveMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:antalk.data.SaveMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(msg_info_ != NULL);
    msg_info_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SaveMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:antalk.data.SaveMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .antalk.common.MsgInfo msg_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:antalk.data.SaveMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:antalk.data.SaveMsgReq)
  return false;
#undef DO_
}

void SaveMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:antalk.data.SaveMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .antalk.common.MsgInfo msg_info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:antalk.data.SaveMsgReq)
}

::google::protobuf::uint8* SaveMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:antalk.data.SaveMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .antalk.common.MsgInfo msg_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->msg_info_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:antalk.data.SaveMsgReq)
  return target;
}

size_t SaveMsgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:antalk.data.SaveMsgReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .antalk.common.MsgInfo msg_info = 1;
  if (has_msg_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->msg_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:antalk.data.SaveMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveMsgReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:antalk.data.SaveMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:antalk.data.SaveMsgReq)
    MergeFrom(*source);
  }
}

void SaveMsgReq::MergeFrom(const SaveMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:antalk.data.SaveMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg_info()) {
    mutable_msg_info()->::antalk::common::MsgInfo::MergeFrom(from.msg_info());
  }
}

void SaveMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:antalk.data.SaveMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveMsgReq::CopyFrom(const SaveMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:antalk.data.SaveMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveMsgReq::IsInitialized() const {
  return true;
}

void SaveMsgReq::Swap(SaveMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveMsgReq::InternalSwap(SaveMsgReq* other) {
  using std::swap;
  swap(msg_info_, other->msg_info_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveMsgReq::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SaveMsgResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveMsgResp::kMsgIdFieldNumber;
const int SaveMsgResp::kResultCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveMsgResp::SaveMsgResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_data_2eproto::InitDefaultsSaveMsgResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:antalk.data.SaveMsgResp)
}
SaveMsgResp::SaveMsgResp(const SaveMsgResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&msg_id_, &from.msg_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_code_) -
    reinterpret_cast<char*>(&msg_id_)) + sizeof(result_code_));
  // @@protoc_insertion_point(copy_constructor:antalk.data.SaveMsgResp)
}

void SaveMsgResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_code_) -
      reinterpret_cast<char*>(&msg_id_)) + sizeof(result_code_));
}

SaveMsgResp::~SaveMsgResp() {
  // @@protoc_insertion_point(destructor:antalk.data.SaveMsgResp)
  SharedDtor();
}

void SaveMsgResp::SharedDtor() {
}

void SaveMsgResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveMsgResp::descriptor() {
  ::protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SaveMsgResp& SaveMsgResp::default_instance() {
  ::protobuf_data_2eproto::InitDefaultsSaveMsgResp();
  return *internal_default_instance();
}

SaveMsgResp* SaveMsgResp::New(::google::protobuf::Arena* arena) const {
  SaveMsgResp* n = new SaveMsgResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveMsgResp::Clear() {
// @@protoc_insertion_point(message_clear_start:antalk.data.SaveMsgResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&msg_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&result_code_) -
        reinterpret_cast<char*>(&msg_id_)) + sizeof(result_code_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SaveMsgResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:antalk.data.SaveMsgResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 msg_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_msg_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .antalk.common.ResultType result_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::antalk::common::ResultType_IsValid(value)) {
            set_result_code(static_cast< ::antalk::common::ResultType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:antalk.data.SaveMsgResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:antalk.data.SaveMsgResp)
  return false;
#undef DO_
}

void SaveMsgResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:antalk.data.SaveMsgResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 msg_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->msg_id(), output);
  }

  // optional .antalk.common.ResultType result_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:antalk.data.SaveMsgResp)
}

::google::protobuf::uint8* SaveMsgResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:antalk.data.SaveMsgResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 msg_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->msg_id(), target);
  }

  // optional .antalk.common.ResultType result_code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:antalk.data.SaveMsgResp)
  return target;
}

size_t SaveMsgResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:antalk.data.SaveMsgResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 msg_id = 1;
    if (has_msg_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->msg_id());
    }

    // optional .antalk.common.ResultType result_code = 2;
    if (has_result_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result_code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveMsgResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:antalk.data.SaveMsgResp)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveMsgResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveMsgResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:antalk.data.SaveMsgResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:antalk.data.SaveMsgResp)
    MergeFrom(*source);
  }
}

void SaveMsgResp::MergeFrom(const SaveMsgResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:antalk.data.SaveMsgResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      msg_id_ = from.msg_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_code_ = from.result_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SaveMsgResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:antalk.data.SaveMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveMsgResp::CopyFrom(const SaveMsgResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:antalk.data.SaveMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveMsgResp::IsInitialized() const {
  return true;
}

void SaveMsgResp::Swap(SaveMsgResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveMsgResp::InternalSwap(SaveMsgResp* other) {
  using std::swap;
  swap(msg_id_, other->msg_id_);
  swap(result_code_, other->result_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveMsgResp::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

UserStatusService::~UserStatusService() {}

const ::google::protobuf::ServiceDescriptor* UserStatusService::descriptor() {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* UserStatusService::GetDescriptor() {
  return descriptor();
}

void UserStatusService::GetUserInfo(::google::protobuf::RpcController* controller,
                         const ::antalk::data::GetUserInfoReq*,
                         ::antalk::data::GetUserInfoRes*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetUserInfo() not implemented.");
  done->Run();
}

void UserStatusService::SetUserStatus(::google::protobuf::RpcController* controller,
                         const ::antalk::data::SetUserStatusReq*,
                         ::antalk::data::SetUserStatusResp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetUserStatus() not implemented.");
  done->Run();
}

void UserStatusService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_data_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      GetUserInfo(controller,
             ::google::protobuf::down_cast<const ::antalk::data::GetUserInfoReq*>(request),
             ::google::protobuf::down_cast< ::antalk::data::GetUserInfoRes*>(response),
             done);
      break;
    case 1:
      SetUserStatus(controller,
             ::google::protobuf::down_cast<const ::antalk::data::SetUserStatusReq*>(request),
             ::google::protobuf::down_cast< ::antalk::data::SetUserStatusResp*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& UserStatusService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::antalk::data::GetUserInfoReq::default_instance();
    case 1:
      return ::antalk::data::SetUserStatusReq::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& UserStatusService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::antalk::data::GetUserInfoRes::default_instance();
    case 1:
      return ::antalk::data::SetUserStatusResp::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

UserStatusService_Stub::UserStatusService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
UserStatusService_Stub::UserStatusService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
UserStatusService_Stub::~UserStatusService_Stub() {
  if (owns_channel_) delete channel_;
}

void UserStatusService_Stub::GetUserInfo(::google::protobuf::RpcController* controller,
                              const ::antalk::data::GetUserInfoReq* request,
                              ::antalk::data::GetUserInfoRes* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void UserStatusService_Stub::SetUserStatus(::google::protobuf::RpcController* controller,
                              const ::antalk::data::SetUserStatusReq* request,
                              ::antalk::data::SetUserStatusResp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
// ===================================================================

MsgService::~MsgService() {}

const ::google::protobuf::ServiceDescriptor* MsgService::descriptor() {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_service_descriptors[1];
}

const ::google::protobuf::ServiceDescriptor* MsgService::GetDescriptor() {
  return descriptor();
}

void MsgService::SaveMsg(::google::protobuf::RpcController* controller,
                         const ::antalk::data::SaveMsgReq*,
                         ::antalk::data::SaveMsgResp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SaveMsg() not implemented.");
  done->Run();
}

void MsgService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_data_2eproto::file_level_service_descriptors[1]);
  switch(method->index()) {
    case 0:
      SaveMsg(controller,
             ::google::protobuf::down_cast<const ::antalk::data::SaveMsgReq*>(request),
             ::google::protobuf::down_cast< ::antalk::data::SaveMsgResp*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& MsgService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::antalk::data::SaveMsgReq::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& MsgService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::antalk::data::SaveMsgResp::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

MsgService_Stub::MsgService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
MsgService_Stub::MsgService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
MsgService_Stub::~MsgService_Stub() {
  if (owns_channel_) delete channel_;
}

void MsgService_Stub::SaveMsg(::google::protobuf::RpcController* controller,
                              const ::antalk::data::SaveMsgReq* request,
                              ::antalk::data::SaveMsgResp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace data
}  // namespace antalk

// @@protoc_insertion_point(global_scope)
