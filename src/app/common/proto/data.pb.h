// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

#ifndef PROTOBUF_data_2eproto__INCLUDED
#define PROTOBUF_data_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace antalk {
namespace data {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_data_2eproto();
void protobuf_AssignDesc_data_2eproto();
void protobuf_ShutdownFile_data_2eproto();

class GetUserInfoReq;
class GetUserInfoRes;

// ===================================================================

class GetUserInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:antalk.data.GetUserInfoReq) */ {
 public:
  GetUserInfoReq();
  virtual ~GetUserInfoReq();

  GetUserInfoReq(const GetUserInfoReq& from);

  inline GetUserInfoReq& operator=(const GetUserInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserInfoReq& default_instance();

  void Swap(GetUserInfoReq* other);

  // implements Message ----------------------------------------------

  inline GetUserInfoReq* New() const { return New(NULL); }

  GetUserInfoReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserInfoReq& from);
  void MergeFrom(const GetUserInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetUserInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 saas_id = 1;
  bool has_saas_id() const;
  void clear_saas_id();
  static const int kSaasIdFieldNumber = 1;
  ::google::protobuf::uint32 saas_id() const;
  void set_saas_id(::google::protobuf::uint32 value);

  // required uint32 user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:antalk.data.GetUserInfoReq)
 private:
  inline void set_has_saas_id();
  inline void clear_has_saas_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 saas_id_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_data_2eproto();
  friend void protobuf_AssignDesc_data_2eproto();
  friend void protobuf_ShutdownFile_data_2eproto();

  void InitAsDefaultInstance();
  static GetUserInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class GetUserInfoRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:antalk.data.GetUserInfoRes) */ {
 public:
  GetUserInfoRes();
  virtual ~GetUserInfoRes();

  GetUserInfoRes(const GetUserInfoRes& from);

  inline GetUserInfoRes& operator=(const GetUserInfoRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserInfoRes& default_instance();

  void Swap(GetUserInfoRes* other);

  // implements Message ----------------------------------------------

  inline GetUserInfoRes* New() const { return New(NULL); }

  GetUserInfoRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserInfoRes& from);
  void MergeFrom(const GetUserInfoRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetUserInfoRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .antalk.common.UserInfo user_info = 1;
  bool has_user_info() const;
  void clear_user_info();
  static const int kUserInfoFieldNumber = 1;
  const ::antalk::common::UserInfo& user_info() const;
  ::antalk::common::UserInfo* mutable_user_info();
  ::antalk::common::UserInfo* release_user_info();
  void set_allocated_user_info(::antalk::common::UserInfo* user_info);

  // @@protoc_insertion_point(class_scope:antalk.data.GetUserInfoRes)
 private:
  inline void set_has_user_info();
  inline void clear_has_user_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::antalk::common::UserInfo* user_info_;
  friend void  protobuf_AddDesc_data_2eproto();
  friend void protobuf_AssignDesc_data_2eproto();
  friend void protobuf_ShutdownFile_data_2eproto();

  void InitAsDefaultInstance();
  static GetUserInfoRes* default_instance_;
};
// ===================================================================

class GetUserInfoService_Stub;

class GetUserInfoService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline GetUserInfoService() {};
 public:
  virtual ~GetUserInfoService();

  typedef GetUserInfoService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void GetUserInfo(::google::protobuf::RpcController* controller,
                       const ::antalk::data::GetUserInfoReq* request,
                       ::antalk::data::GetUserInfoRes* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(GetUserInfoService);
};

class GetUserInfoService_Stub : public GetUserInfoService {
 public:
  GetUserInfoService_Stub(::google::protobuf::RpcChannel* channel);
  GetUserInfoService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~GetUserInfoService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements GetUserInfoService ------------------------------------------

  void GetUserInfo(::google::protobuf::RpcController* controller,
                       const ::antalk::data::GetUserInfoReq* request,
                       ::antalk::data::GetUserInfoRes* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(GetUserInfoService_Stub);
};


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetUserInfoReq

// required uint32 saas_id = 1;
inline bool GetUserInfoReq::has_saas_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserInfoReq::set_has_saas_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserInfoReq::clear_has_saas_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserInfoReq::clear_saas_id() {
  saas_id_ = 0u;
  clear_has_saas_id();
}
inline ::google::protobuf::uint32 GetUserInfoReq::saas_id() const {
  // @@protoc_insertion_point(field_get:antalk.data.GetUserInfoReq.saas_id)
  return saas_id_;
}
inline void GetUserInfoReq::set_saas_id(::google::protobuf::uint32 value) {
  set_has_saas_id();
  saas_id_ = value;
  // @@protoc_insertion_point(field_set:antalk.data.GetUserInfoReq.saas_id)
}

// required uint32 user_id = 2;
inline bool GetUserInfoReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserInfoReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserInfoReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserInfoReq::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 GetUserInfoReq::user_id() const {
  // @@protoc_insertion_point(field_get:antalk.data.GetUserInfoReq.user_id)
  return user_id_;
}
inline void GetUserInfoReq::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:antalk.data.GetUserInfoReq.user_id)
}

// -------------------------------------------------------------------

// GetUserInfoRes

// required .antalk.common.UserInfo user_info = 1;
inline bool GetUserInfoRes::has_user_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserInfoRes::set_has_user_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserInfoRes::clear_has_user_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserInfoRes::clear_user_info() {
  if (user_info_ != NULL) user_info_->::antalk::common::UserInfo::Clear();
  clear_has_user_info();
}
inline const ::antalk::common::UserInfo& GetUserInfoRes::user_info() const {
  // @@protoc_insertion_point(field_get:antalk.data.GetUserInfoRes.user_info)
  return user_info_ != NULL ? *user_info_ : *default_instance_->user_info_;
}
inline ::antalk::common::UserInfo* GetUserInfoRes::mutable_user_info() {
  set_has_user_info();
  if (user_info_ == NULL) {
    user_info_ = new ::antalk::common::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:antalk.data.GetUserInfoRes.user_info)
  return user_info_;
}
inline ::antalk::common::UserInfo* GetUserInfoRes::release_user_info() {
  // @@protoc_insertion_point(field_release:antalk.data.GetUserInfoRes.user_info)
  clear_has_user_info();
  ::antalk::common::UserInfo* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
inline void GetUserInfoRes::set_allocated_user_info(::antalk::common::UserInfo* user_info) {
  delete user_info_;
  user_info_ = user_info;
  if (user_info) {
    set_has_user_info();
  } else {
    clear_has_user_info();
  }
  // @@protoc_insertion_point(field_set_allocated:antalk.data.GetUserInfoRes.user_info)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace data
}  // namespace antalk

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_data_2eproto__INCLUDED
